@model PagedList.IPagedList<ContosoUniversity.Models.Student>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Students";
}

<h2>Students</h2>

<p>
    <input type="button" class="btn btn-xs btn-info" value="Create New" onclick="location.href='@Url.Action("Create", "Student")'" />
</p>

@using (Html.BeginForm("Index", "Student", FormMethod.Get))
{
    <p>
        Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input class="btn btn-sm btn-info" type="submit" value="Search" />
    </p>
}
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Last Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter=ViewBag.CurrentFilter })
        </th>
        <th style="cursor: default">
            First Name
        </th>
        <th>
            @Html.ActionLink("Enrollment Date", "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter=ViewBag.CurrentFilter })
        </th>
        <th></th>
    </tr>


    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FirstMidName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EnrollmentDate)
            </td>
            <td>
                <input type="button" class="btn btn-xs btn-info" value="Edit" onclick="location.href='@Url.Action("Edit", "Student", new { id = item.ID })'" /> |
                <input type="button" class="btn btn-xs btn-info" value="Details" onclick="location.href='@Url.Action("Details", "Student", new { id = item.ID })'" /> |
                <input type="button" class="btn btn-xs btn-info" value="Delete" onclick="location.href='@Url.Action("Delete", "Student", new { id = item.ID })'" />
            </td>
        </tr>
    }

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new {  page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilterm }))